@page "/add-genstand"
@page "/add-genstand/{Id:int}"
@rendermode InteractiveAuto


<h3>Tilføj Genstand</h3>

<div class="form-container">
    <EditForm Model="@GenstandModel" OnValidSubmit="@HandleSave" FormName="addGenstand">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group" id="genstandsimage">
            <label class="form-label">Billede</label>
            
        </div>
        
        
        <div class="form-group">
            <label class="form-label">Genstands Navn</label>
            <InputText @bind-Value="GenstandModel.Name" class="form-control"></InputText>
            <ValidationMessage For="()=>GenstandModel.Name"></ValidationMessage>
        </div>

        <div class="form-group">
            <label class="form-label">Beskrivelse</label>
            <InputText @bind-Value="GenstandModel.Description" class="form-control"></InputText>
            <ValidationMessage For="()=>GenstandModel.Description"></ValidationMessage>
        </div>
        

        <div class="form-group">
            <label class="form-label">Dato for Genstand</label>
            <InputDate @bind-Value="GenstandModel.DateOfGenstand" class="form-control"></InputDate>
            <ValidationMessage For="()=>GenstandModel.DateOfGenstand"></ValidationMessage>
        </div>

        <div class="form-group">
            <label class="form-label">Størrelse</label>
            <InputNumber @bind-Value="GenstandModel.Size" class="form-control"></InputNumber>
            <ValidationMessage For="()=>GenstandModel.Size"></ValidationMessage>
        </div>

        <div class="form-group">
            <label class="form-label">Placering</label>
            <InputText @bind-Value="GenstandModel.Placement" class="form-control"></InputText>
            <ValidationMessage For="()=>GenstandModel.Placement"></ValidationMessage>
        </div>

        <div class="form-group">
            <label class="form-label">Tilstand</label>
            <InputText @bind-Value="GenstandModel.Condition" class="form-control"></InputText>
            <ValidationMessage For="()=>GenstandModel.Condition"></ValidationMessage>
        </div>

        <div class="form-group" id="loan">
            <label class="form-label">Udlånt</label>
            <InputCheckbox @bind-Value="GenstandModel.Loan" class="form-control-loan"></InputCheckbox>
            <ValidationMessage For="()=>GenstandModel.Loan"></ValidationMessage>
        </div>
       
        @* <div class="form-group">
                    <label class="form-label">Genstands Katergori</label>
                    <InputSelect @bind-Value="GenstandModel.Category" TValue="string" class="form-control"></InputSelect>
                    <ValidationMessage For="()=> GenstandModel.Description" />
                </div> *@

       
        
        

        <button type="submit" class="btn btn-primary">Gem</button>
    </EditForm>
</div>
@code {
    //[SupplyParameterFromForm]
    public Genstand GenstandModel { get; set; } = new();
    [Parameter] public int Id { get; set; }
    public Genstand GenstandReturn = new();

    private async Task HandleSave()
    {
        if (GenstandModel.Id > 0)
        {

            var response = await httpClient.PutAsJsonAsync("api/Genstand/Update-Genstand", GenstandModel);
            var genstand = await response.Content.ReadFromJsonAsync<Genstand>();
            if(genstand is not null)
            {
                GenstandModel = new();
                NavigationManager.NavigateTo("genstand-list");
            }          
            //ReturnProduct = await ProductService.UpdateProductAsync(ProductModel);

        }

        else
        {
            //GenstandReturn = await GenstandService.AddGenstandAsync(GenstandModel);
            var response = await httpClient.PostAsJsonAsync("api/Genstand/Add-Genstand", GenstandModel);
            if (response is null) return;
            GenstandReturn = await response.Content.ReadFromJsonAsync<Genstand>();
            GenstandReturn = new();

        }

    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id > 0)
        {
            var response = await httpClient.GetAsync($"api/Genstand/Single-Genstand/{Id}");
            GenstandModel = await response.Content.ReadFromJsonAsync<Genstand>();
        }
    }
     
    
    
}
