@page "/genstand-search"
@using SharedLibrary.Dtos
@inject HttpClient httpClient

@* @rendermode InteractiveAuto *@

<h3>Søg Genstand</h3>
<div class="search-div">
<EditForm Model="@GenstandSearchDto" OnValidSubmit="@HandleSearch" FormName="searchGenstand">
        <DataAnnotationsValidator />
        <ValidationSummary />

    <div class="form-group">
        <label class="form-label">Søg Genstand Navn</label>
        <InputText @bind-Value="GenstandSearchDto.SearchText" class="form-control"></InputText>
        <ValidationMessage For="()=>GenstandSearchDto.SearchText"></ValidationMessage>
    </div>
    
    <br>
    <button type="submit" class="btn btn-primary">Søg</button>
</EditForm>

</div>
<br>

<div class="container">
    @if (Genstands.Count > 0)
    {

        <div class="card-body">
            <table class="table table-sm">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Navn</th>
                        <th>Beskrivelse</th>
                        <th></th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var genstand in Genstands)
                    {
                        <tr>
                            <td>@genstand.Id</td>
                            <td>@genstand.Name</td>
                            <td>@genstand.Description</td>
                            <td class="btn-td">
                                <div class="hstack gap-3">
                                    <button class="btn  btn-info btn-extra-small" @onclick="()=>EditGenstand(genstand)"> Edit</button>
                                    <button class="btn  btn-danger btn-extra-small" @onclick="() => DeleteGenstand(genstand)">Delete</button>
                                    <button class="btn btn-secondary btn-extra-small" @onclick="() => ViewGenstand(genstand)">View</button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info"> Ingen Genstand Fundet </div>
    }
</div>

@code {
    [SupplyParameterFromForm]
    public GenstandSearchDto GenstandSearchDto { get; set;  } = new();

    private List<Genstand> Genstands { get; set; } = new();

    public async Task HandleSearch()
    {
        if(GenstandSearchDto is not null)
        {
            string searchText = GenstandSearchDto.SearchText;
            //var response = httpClient.GetAsync($"api/Genstand/Search-Genstand-By-Name/postman").GetAwaiter().GetResult() ;
            var response = httpClient.GetAsync($"api/Genstand/Search-Genstand-By-Name/{searchText}").GetAwaiter().GetResult() ;
            if (response is null) return;

            var returnedGenstands = await response.Content.ReadFromJsonAsync<List<Genstand>>();
            if (returnedGenstands is null) return;
            Genstands.Clear();
            returnedGenstands.ForEach(g => Genstands.Add(g));

            GenstandSearchDto = new();
        }
    }

    private void EditGenstand(Genstand genstand)
    {
        NavigationManager.NavigateTo($"add-genstand/{genstand.Id}");
    }

    private async Task DeleteGenstand(Genstand genstand)
    {
        if (!await IJSRuntime.InvokeAsync<bool>("confirm", $"Er du sikker på at du vill slette\n Id:  {genstand.Id} \n Name: {genstand.Name} \n Description: {genstand.Description}"))
            return;
        var genstandToDelete = await httpClient.DeleteAsync($"api/Genstand/Delete-Genstand/{genstand.Id}");
        var response = await genstandToDelete.Content.ReadFromJsonAsync<Genstand>();
        Genstands?.Clear();
        await HandleSearch();
        //return response!;
    }

    private void ViewGenstand(Genstand genstand)
    {
        NavigationManager.NavigateTo($"/genstands-side/{genstand.Id}");

    }

}
